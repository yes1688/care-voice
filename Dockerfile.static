# =======================================================
# Care Voice 靜態鏈接版本 - 解決 whisper-rs 相容性問題
# 使用 musl 目標完全靜態鏈接，避免動態庫相容性問題
# =======================================================

# ===============================
# Stage 1: 構建前端 (保持不變)
# ===============================
FROM docker.io/node:20-slim AS frontend-builder

WORKDIR /app/frontend

# 複製前端依賴文件
COPY frontend/package*.json ./
RUN npm ci --only=production

# 複製前端源碼並構建
COPY frontend/ ./
RUN npm run build

# ===============================
# Stage 2: 靜態鏈接後端構建
# ===============================
FROM docker.io/clux/muslrust:1.85.0 AS backend-builder

# 設置工作目錄
WORKDIR /app/backend

# 安裝 whisper-rs 需要的額外依賴
RUN apt-get update && apt-get install -y \
    cmake \
    clang \
    libclang-dev \
    git \
    && rm -rf /var/lib/apt/lists/*

# 複製 Rust 依賴文件
COPY backend/Cargo.toml backend/Cargo.lock ./

# 創建虛擬源文件以快取依賴
RUN mkdir src && echo "fn main() {}" > src/main.rs
RUN cargo build --release --target x86_64-unknown-linux-musl && rm -rf src

# 複製實際源碼並構建靜態鏈接版本
COPY backend/src ./src
ENV CC=musl-gcc
ENV CXX=musl-g++
RUN cargo build --release --target x86_64-unknown-linux-musl

# ===============================
# Stage 3: 最小化運行時環境
# ===============================
FROM docker.io/alpine:3.20 AS runtime

# 安裝最小運行時依賴
RUN apk add --no-cache \
    nginx \
    supervisor \
    curl \
    ca-certificates

# 創建應用用戶和目錄
RUN addgroup -g 1000 app && \
    adduser -u 1000 -G app -s /bin/sh -D app && \
    mkdir -p /app/models /var/log/supervisor /run/nginx

# 複製靜態鏈接的後端二進位文件
COPY --from=backend-builder /app/backend/target/x86_64-unknown-linux-musl/release/care-voice /app/care-voice
RUN chown app:app /app/care-voice && chmod +x /app/care-voice

# 複製 Whisper 模型
COPY backend/models/ggml-base.bin /app/models/
RUN chown -R app:app /app/models

# 複製前端構建文件
COPY --from=frontend-builder /app/frontend/dist /usr/share/nginx/html
RUN chown -R nginx:nginx /usr/share/nginx/html

# 複製配置文件
COPY unified-nginx.conf /etc/nginx/nginx.conf
COPY supervisord.conf /etc/supervisor/supervisord.conf

# 創建日誌目錄
RUN mkdir -p /var/log/nginx /var/log/supervisor && \
    chown -R nginx:nginx /var/log/nginx

# 設置工作目錄
WORKDIR /app

# 暴露統一端口
EXPOSE 8000

# 健康檢查
HEALTHCHECK --interval=30s --timeout=10s --start-period=30s --retries=3 \
    CMD curl -f http://localhost:8000/health || exit 1

# 啟動 supervisord (管理 nginx + whisper-rs)
CMD ["/usr/bin/supervisord", "-c", "/etc/supervisor/supervisord.conf"]