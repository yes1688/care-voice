# =======================================================
# Care Voice 分階段整合部署配置
# 三階段構建: 前端編譯 → 後端編譯 → 最終整合
# =======================================================
version: '3.8'

services:
  # =======================================================
  # 階段1: 前端編譯服務
  # =======================================================
  frontend-builder:
    build:
      context: ./frontend
      dockerfile: Dockerfile.build
    image: care-voice-frontend:latest
    container_name: care-voice-frontend-builder
    
    # 僅用於構建，不需要運行
    profiles: ["build-only"]
    
    # 標籤和元數據
    labels:
      - "care-voice.stage=frontend-build"
      - "care-voice.version=1.0.0"
      - "care-voice.component=frontend"
    
    # 構建完成後自動停止
    restart: "no"
    
    # 健康檢查 (驗證編譯產出)
    healthcheck:
      test: ["CMD", "test", "-f", "/app/dist/index.html"]
      interval: 30s
      timeout: 5s
      retries: 2
      start_period: 60s

  # =======================================================
  # 階段2: 後端編譯服務  
  # =======================================================
  backend-builder:
    build:
      context: ./backend
      dockerfile: Dockerfile.build
    image: care-voice-backend:latest
    container_name: care-voice-backend-builder
    
    # 僅用於構建，不需要運行
    profiles: ["build-only"]
    
    # 標籤和元數據
    labels:
      - "care-voice.stage=backend-build"
      - "care-voice.version=1.0.0"
      - "care-voice.component=backend"
    
    # 構建完成後自動停止
    restart: "no"
    
    # 健康檢查 (驗證編譯產出)
    healthcheck:
      test: ["CMD", "test", "-x", "/app/target/release/care-voice"]
      interval: 30s
      timeout: 10s
      retries: 2
      start_period: 120s

  # =======================================================
  # 階段3: 最終整合服務
  # =======================================================
  care-voice-integrated:
    build:
      context: .
      dockerfile: Dockerfile.final
    image: care-voice-integrated:latest
    container_name: care-voice-integrated
    
    # 依賴編譯階段完成
    depends_on:
      frontend-builder:
        condition: service_completed_successfully
      backend-builder:
        condition: service_completed_successfully
    
    # 端口映射
    ports:
      - "8000:8000"
    
    # 重啟策略
    restart: unless-stopped
    
    # 環境變數
    environment:
      - RUST_LOG=info
      - TZ=Asia/Taipei
      - NGINX_PORT=8000
      - BACKEND_PORT=8001
    
    # 健康檢查
    healthcheck:
      test: ["CMD", "/usr/local/bin/healthcheck.sh"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    
    # 持久化儲存
    volumes:
      - care-voice-logs:/var/log/supervisor
      - care-voice-nginx-logs:/var/log/nginx
    
    # 網路配置
    networks:
      - care-voice-net
    
    # 標籤和元數據
    labels:
      - "care-voice.stage=final-integration"
      - "care-voice.version=1.0.0"
      - "care-voice.component=integrated"
      - "care-voice.service=production"
    
    # 資源限制 (可選)
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.25'

  # =======================================================
  # 可選: 開發模式前端服務 (熱重載)
  # =======================================================
  frontend-dev:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: care-voice-frontend-dev
    
    # 僅在開發模式啟用
    profiles: ["dev"]
    
    ports:
      - "3000:3000"
    
    # 開發模式配置
    environment:
      - NODE_ENV=development
    
    # 代碼熱重載
    volumes:
      - ./frontend/src:/app/src:ro
      - ./frontend/package.json:/app/package.json:ro
    
    networks:
      - care-voice-net

  # =======================================================
  # 可選: 後端開發服務
  # =======================================================
  backend-dev:
    build:
      context: ./backend
      dockerfile: Dockerfile.simple
    container_name: care-voice-backend-dev
    
    # 僅在開發模式啟用
    profiles: ["dev"]
    
    ports:
      - "8001:8000"
    
    # 開發模式配置
    environment:
      - RUST_LOG=debug
      - RUST_BACKTRACE=1
    
    # 代碼重載 (需要配置文件監控)
    volumes:
      - ./backend/src:/app/src:ro
      - ./backend/Cargo.toml:/app/Cargo.toml:ro
    
    networks:
      - care-voice-net

# =======================================================
# 持久化儲存配置
# =======================================================
volumes:
  # 應用日誌
  care-voice-logs:
    driver: local
    labels:
      - "care-voice.volume=logs"
  
  # nginx 日誌
  care-voice-nginx-logs:
    driver: local
    labels:
      - "care-voice.volume=nginx-logs"
  
  # 可選: 數據持久化
  care-voice-data:
    driver: local
    labels:
      - "care-voice.volume=data"

# =======================================================
# 網路配置
# =======================================================
networks:
  care-voice-net:
    driver: bridge
    name: care-voice-network
    labels:
      - "care-voice.network=main"
    ipam:
      driver: default
      config:
        - subnet: 172.20.0.0/16
          gateway: 172.20.0.1

# =======================================================
# 擴展配置 (可選功能)
# =======================================================
x-common-variables: &common-env
  RUST_LOG: info
  TZ: Asia/Taipei

x-logging: &default-logging
  driver: "json-file"
  options:
    max-size: "10m"
    max-file: "3"

x-restart-policy: &restart-unless-stopped
  restart: unless-stopped