[supervisord]
nodaemon=true
user=root
logfile=/var/log/supervisor/supervisord.log
pidfile=/var/run/supervisord.pid
logfile_maxbytes=50MB
logfile_backups=3
loglevel=info

[unix_http_server]
file=/var/run/supervisor.sock
chmod=0700

[supervisorctl]
serverurl=unix:///var/run/supervisor.sock

[rpcinterface:supervisor]
supervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface

# ===============================
# whisper-rs Rust 後端服務
# ===============================
[program:whisper-rs]
command=/app/care-voice
directory=/app
user=root
autostart=true
autorestart=true
startsecs=10
startretries=3
redirect_stderr=true
stdout_logfile=/var/log/supervisor/whisper-rs.log
stdout_logfile_maxbytes=10MB
stdout_logfile_backups=3
environment=RUST_LOG="care_voice=info,whisper_rs=info",RUST_BACKTRACE=1

# 確保 whisper-rs 啟動後再啟動 nginx
priority=100

# ===============================
# nginx 前端代理服務
# ===============================
[program:nginx]
command=/usr/sbin/nginx -g "daemon off;"
user=root
autostart=true
autorestart=true
startsecs=5
startretries=3
redirect_stderr=true
stdout_logfile=/var/log/supervisor/nginx.log
stdout_logfile_maxbytes=10MB
stdout_logfile_backups=3

# nginx 等待 whisper-rs 啟動
priority=200

# ===============================
# 系統監控和診斷服務
# ===============================
[program:gpu-monitor]
command=/usr/bin/python3 /app/gpu_diagnostics.py --monitor
directory=/app
user=root
autostart=true
autorestart=true
startsecs=5
startretries=3
redirect_stderr=true
stdout_logfile=/var/log/supervisor/gpu-monitor.log
stdout_logfile_maxbytes=5MB
stdout_logfile_backups=2

# 監控服務優先級最低
priority=300