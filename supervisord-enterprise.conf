# ===================================
# Care Voice Enterprise - Supervisor 配置
# 企業級進程管理 + 監控 + 自動恢復
# ===================================

[unix_http_server]
file=/tmp/supervisor.sock
chmod=0700

[supervisord]
logfile=/var/log/supervisor/supervisord.log
logfile_maxbytes=50MB
logfile_backups=10
loglevel=info
pidfile=/tmp/supervisord.pid
nodaemon=true
minfds=1024
minprocs=200
user=root

[rpcinterface:supervisor]
supervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface

[supervisorctl]
serverurl=unix:///tmp/supervisor.sock

# ===================================
# nginx Web 服務器
# ===================================
[program:nginx]
command=nginx -g "daemon off;"
user=root
autostart=true
autorestart=true
startretries=5
numprocs=1
redirect_stderr=true
stdout_logfile=/var/log/care-voice/nginx.log
stdout_logfile_maxbytes=50MB
stdout_logfile_backups=5
stderr_logfile=/var/log/care-voice/nginx-error.log
stderr_logfile_maxbytes=50MB
stderr_logfile_backups=5
priority=100

# 健康檢查
stdout_events_enabled=true
stderr_events_enabled=true

# 重啟策略
stopasgroup=true
killasgroup=true
stopsignal=QUIT
stopwaitsecs=30

# ===================================
# Care Voice AI 後端服務
# ===================================
[program:care-voice-backend]
command=/app/care-voice
directory=/app
user=root
autostart=true
autorestart=true
startretries=10
numprocs=1
redirect_stderr=true
stdout_logfile=/var/log/care-voice/app.log
stdout_logfile_maxbytes=100MB
stdout_logfile_backups=10
stderr_logfile=/var/log/care-voice/app-error.log
stderr_logfile_maxbytes=100MB
stderr_logfile_backups=10
priority=200

# 環境變數
environment=
    RUST_LOG=info,
    BACKEND_PORT=8001,
    RUST_BACKTRACE=1,
    CUDA_VISIBLE_DEVICES=all,
    NVIDIA_VISIBLE_DEVICES=all,
    LD_LIBRARY_PATH=/usr/local/cuda/lib64:/usr/lib/x86_64-linux-gnu,
    PATH=/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin

# 健康檢查和監控
stdout_events_enabled=true
stderr_events_enabled=true

# 重啟策略
stopasgroup=true
killasgroup=true
stopsignal=TERM
stopwaitsecs=60

# 資源限制
startsecs=10
startretries=10

# ===================================
# 系統監控服務 (可選)
# ===================================
[program:system-monitor]
command=/bin/bash -c "while true; do echo \"$(date): CPU: $(top -bn1 | grep 'Cpu(s)' | awk '{print $2}'), Memory: $(free -m | awk 'NR==2{printf \"%.1f%%\", $3*100/$2}'), GPU: $(nvidia-smi --query-gpu=utilization.gpu --format=csv,noheader,nounits 2>/dev/null || echo 'N/A')\"; sleep 30; done"
directory=/tmp
user=root
autostart=true
autorestart=true
startretries=3
numprocs=1
redirect_stderr=true
stdout_logfile=/var/log/care-voice/system-monitor.log
stdout_logfile_maxbytes=10MB
stdout_logfile_backups=3
priority=50

# 較低的重要性
stopasgroup=true
killasgroup=true
stopsignal=TERM
stopwaitsecs=10

# ===================================
# 日誌輪替服務
# ===================================
[program:log-rotator]
command=/bin/bash -c "while true; do find /var/log/care-voice -name '*.log' -size +100M -exec truncate -s 50M {} \; 2>/dev/null; sleep 3600; done"
directory=/tmp
user=root
autostart=true
autorestart=true
startretries=3
numprocs=1
redirect_stderr=true
stdout_logfile=/var/log/care-voice/log-rotator.log
stdout_logfile_maxbytes=10MB
stdout_logfile_backups=2
priority=10

# 低優先級背景任務
stopasgroup=true
killasgroup=true
stopsignal=TERM
stopwaitsecs=5

# ===================================
# 健康檢查服務
# ===================================
[program:health-checker]
command=/bin/bash -c "while true; do /usr/local/bin/healthcheck.sh > /dev/null 2>&1 || echo \"$(date): Health check failed\"; sleep 30; done"
directory=/tmp
user=root
autostart=true
autorestart=true
startretries=3
numprocs=1
redirect_stderr=true
stdout_logfile=/var/log/care-voice/health-checker.log
stdout_logfile_maxbytes=10MB
stdout_logfile_backups=3
priority=30

stopasgroup=true
killasgroup=true
stopsignal=TERM
stopwaitsecs=10

# ===================================
# GPU 監控服務 (如果 NVIDIA GPU 可用)
# ===================================
[program:gpu-monitor]
command=/bin/bash -c "if command -v nvidia-smi >/dev/null 2>&1; then while true; do nvidia-smi --query-gpu=timestamp,name,temperature.gpu,utilization.gpu,utilization.memory,memory.total,memory.used,memory.free --format=csv >> /var/log/care-voice/gpu-metrics.csv; sleep 60; done; else echo 'GPU monitoring disabled: nvidia-smi not available'; sleep 3600; fi"
directory=/tmp
user=root
autostart=true
autorestart=true
startretries=3
numprocs=1
redirect_stderr=true
stdout_logfile=/var/log/care-voice/gpu-monitor.log
stdout_logfile_maxbytes=10MB
stdout_logfile_backups=3
priority=20

stopasgroup=true
killasgroup=true
stopsignal=TERM
stopwaitsecs=10

# ===================================
# 事件監聽器 (企業級監控)
# ===================================
[eventlistener:process-monitor]
command=/bin/bash -c "while read line; do echo \"$(date): Process event: $line\" >> /var/log/care-voice/process-events.log; done"
events=PROCESS_STATE_RUNNING,PROCESS_STATE_EXITED,PROCESS_STATE_FATAL
stdout_logfile=/var/log/care-voice/event-listener.log
stdout_logfile_maxbytes=10MB
stdout_logfile_backups=3
stderr_logfile=/var/log/care-voice/event-listener-error.log
stderr_logfile_maxbytes=10MB
stderr_logfile_backups=3

# ===================================
# 群組管理 (企業級服務編排)
# ===================================
[group:care-voice-core]
programs=nginx,care-voice-backend
priority=999

[group:care-voice-monitoring]
programs=system-monitor,health-checker,gpu-monitor
priority=100

[group:care-voice-maintenance]
programs=log-rotator
priority=10

# ===================================
# 全域設定
# ===================================
[supervisord]
# 增加文件描述符限制
minfds=4096
minprocs=512

# 日誌設定
logfile_maxbytes=100MB
logfile_backups=10
loglevel=info

# 安全設定
umask=022
silent=false

# 性能設定
strip_ansi=false