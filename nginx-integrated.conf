# =======================================================
# Care Voice 統一 nginx 配置
# 管理: 前端靜態文件 + 後端 API 代理
# 端口: 8000 (對外) → 8001 (後端)
# =======================================================

events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # 日誌格式
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
    
    # 日誌配置
    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;
    
    # 性能優化
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    server_tokens off;
    
    # 客戶端配置
    client_max_body_size 100M;
    client_body_timeout 60s;
    client_header_timeout 60s;
    
    # Gzip 壓縮配置
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        application/rss+xml
        image/svg+xml
        text/x-component
        text/x-js
        application/x-font-ttf
        application/vnd.ms-fontobject
        font/opentype;

    # 緩衝區配置
    proxy_buffering on;
    proxy_buffer_size 4k;
    proxy_buffers 8 4k;
    proxy_busy_buffers_size 8k;

    server {
        listen 8000;
        server_name localhost;
        root /usr/share/nginx/html;
        index index.html;
        
        # 安全配置
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "no-referrer-when-downgrade" always;
        add_header X-Served-By "care-voice-integrated" always;
        
        # CSP 安全策略 (允許音頻錄製)
        add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; media-src 'self' blob: data:; connect-src 'self'; font-src 'self' data:;" always;
        
        # API 代理到後端服務
        location /api/ {
            # 移除 /api 前綴，直接代理到後端
            rewrite ^/api/(.*)$ /$1 break;
            proxy_pass http://localhost:8001;
            
            # 代理標頭設定
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Original-URI $request_uri;
            
            # 大文件上傳支援 (音頻文件)
            proxy_connect_timeout 60s;
            proxy_send_timeout 120s;
            proxy_read_timeout 120s;
            
            # 請求緩衝控制 (大文件處理)
            proxy_request_buffering off;
            proxy_buffering off;
            
            # 錯誤處理
            proxy_intercept_errors on;
            error_page 502 503 504 /50x.html;
            
            # 添加 API 標識
            add_header X-API-Backend "care-voice-rust" always;
        }
        
        # 健康檢查 - 直接代理到後端
        location /health {
            proxy_pass http://localhost:8001/health;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            access_log off;
            
            # 快速超時設定
            proxy_connect_timeout 5s;
            proxy_read_timeout 5s;
            proxy_send_timeout 5s;
        }
        
        # WebSocket 支援 (如果需要)
        location /ws/ {
            proxy_pass http://localhost:8001;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # 靜態資源優化快取
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot|otf)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header X-Served-By "nginx-integrated";
            
            # 開啟 gzip 靜態壓縮
            gzip_static on;
            
            # 預壓縮文件支援
            location ~* \.(js|css)$ {
                add_header Vary "Accept-Encoding";
            }
        }
        
        # 字體文件特殊處理
        location ~* \.(woff|woff2|ttf|eot|otf)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header Access-Control-Allow-Origin "*";
        }
        
        # Favicon 處理
        location = /favicon.ico {
            log_not_found off;
            access_log off;
            expires 1y;
        }
        
        # Robots.txt
        location = /robots.txt {
            log_not_found off;
            access_log off;
        }
        
        # SPA 路由支援 - 所有其他請求返回 index.html
        location / {
            try_files $uri $uri/ /index.html;
            
            # HTML 文件不快取 (確保更新)
            location ~* \.html$ {
                add_header Cache-Control "no-cache, no-store, must-revalidate";
                add_header Pragma "no-cache";
                add_header Expires "0";
                add_header X-Served-By "nginx-integrated";
                
                # HTML 預處理
                sub_filter_once off;
                sub_filter_types text/html;
            }
        }
        
        # 錯誤頁面
        error_page 404 /index.html;
        error_page 500 502 503 504 /50x.html;
        
        location = /50x.html {
            root /usr/share/nginx/html;
            internal;
        }
        
        # 狀態監控 (可選)
        location = /nginx-status {
            stub_status on;
            access_log off;
            allow 127.0.0.1;
            deny all;
        }
        
        # 禁止訪問隱藏文件
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }
        
        # 禁止訪問備份文件
        location ~ ~$ {
            deny all;
            access_log off;
            log_not_found off;
        }
    }
}

# Stream 模組 (如果需要 TCP/UDP 代理)
# stream {
#     upstream backend {
#         server localhost:8001;
#     }
#     
#     server {
#         listen 8080;
#         proxy_pass backend;
#     }
# }