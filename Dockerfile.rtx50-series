# RTX 50 系列通用 GPU 加速容器
# 支援 RTX 50/40/30/20 系列，向下兼容到 GTX 10 系列
# 基於 CUDA 12.8 runtime 和 Ubuntu 24.04 LTS
FROM docker.io/nvidia/cuda:12.8.0-runtime-ubuntu24.04

# 設置環境變量
ENV DEBIAN_FRONTEND=noninteractive
ENV TZ=Asia/Taipei
ENV PYTHONUNBUFFERED=1
ENV CUDA_HOME=/usr/local/cuda
ENV PATH=${CUDA_HOME}/bin:${PATH}
ENV LD_LIBRARY_PATH=${CUDA_HOME}/lib64:${LD_LIBRARY_PATH}

# RTX 50 系列多架構支援 (GTX 10xx 到 RTX 50xx)
ENV TORCH_CUDA_ARCH_LIST="6.0;6.1;7.0;7.5;8.0;8.6;8.9;9.0;12.0"
ENV CUDA_ARCHITECTURES="60;61;70;75;80;86;89;90;120"

# 標籤信息
LABEL maintainer="Care Voice RTX 50 Series GPU Accelerated"
LABEL version="5.0.0"
LABEL description="Universal GPU container for RTX 50/40/30/20 series with CUDA 12.8 + Ubuntu 24.04 + PyTorch nightly cu128"
LABEL gpu.architectures="sm_60,sm_61,sm_70,sm_75,sm_80,sm_86,sm_89,sm_90,sm_120"
LABEL gpu.series="RTX 50 series optimized, backward compatible"

# 安裝系統依賴
RUN apt-get update && apt-get install -y \
    python3 \
    python3-pip \
    python3-dev \
    python3-venv \
    nginx \
    supervisor \
    curl \
    ca-certificates \
    ffmpeg \
    git \
    build-essential \
    software-properties-common \
    wget \
    gnupg2 \
    && rm -rf /var/lib/apt/lists/*

# 創建符號鏈接
RUN ln -sf /usr/bin/python3 /usr/bin/python

# 設置 pip 環境以繞過 Ubuntu 24.04 的外部管理環境限制
ENV PIP_BREAK_SYSTEM_PACKAGES=1

# 安裝 PyTorch nightly 支持 CUDA 12.8 和多架構 (sm_60 到 sm_120)
# 支援 GTX 10xx 到 RTX 50xx 全系列顯卡
RUN python3 -m pip install --pre torch torchvision torchaudio \
    --index-url https://download.pytorch.org/whl/nightly/cu128 \
    --no-cache-dir

# 安裝 OpenAI Whisper 和其他依賴
RUN python3 -m pip install --no-cache-dir \
    openai-whisper \
    numpy \
    soundfile \
    librosa \
    pydub \
    python-multipart \
    requests \
    psutil

# 創建應用用戶和目錄
RUN (groupadd -g 1000 app || true) && \
    (useradd -u 1000 -g 1000 -m -s /bin/bash app || true) && \
    mkdir -p /app/models /var/log/supervisor /run/nginx /app/logs

# 複製前端文件
COPY frontend/dist /usr/share/nginx/html
RUN chown -R www-data:www-data /usr/share/nginx/html

# 創建 RTX 50 系列通用 GPU Whisper 服務器
COPY gpu_whisper_server_rtx50.py /app/gpu_whisper_server.py
RUN chmod +x /app/gpu_whisper_server.py

# 複製配置文件
COPY unified-nginx.conf /etc/nginx/nginx.conf
COPY supervisord_rtx50.conf /etc/supervisor/supervisord.conf

# 創建 RTX 50 系列 GPU 測試和診斷腳本
COPY gpu_diagnostics_rtx50.py /app/gpu_diagnostics.py
RUN chmod +x /app/gpu_diagnostics.py

# 設置權限
RUN mkdir -p /var/log/nginx /var/log/supervisor && \
    chown -R www-data:www-data /var/log/nginx && \
    (chown -R 1000:1000 /app || chown -R root:root /app)

# 設置工作目錄
WORKDIR /app

# 暴露端口
EXPOSE 8001

# 健康檢查 - 增加啟動時間以允許 GPU 初始化
HEALTHCHECK --interval=30s --timeout=15s --start-period=180s --retries=3 \
    CMD curl -f http://localhost:8001/health || exit 1

# 啟動命令
CMD ["/usr/bin/supervisord", "-c", "/etc/supervisor/supervisord.conf"]