# =======================================================
# 專門解決 whisper-rs 相容性問題的容器
# 使用預編譯 musl 環境快速驗證解決方案
# =======================================================

FROM docker.io/clux/muslrust:stable AS builder

WORKDIR /app

# 複製現有的後端代碼
COPY backend/Cargo.toml backend/Cargo.lock ./
COPY backend/src ./src

# 設置 musl 環境變數
ENV CC=musl-gcc
ENV CXX=musl-g++

# 強制使用 musl 目標進行靜態鏈接
RUN cargo build --release --target x86_64-unknown-linux-musl

# ===============================
# 運行時階段 - 純 Alpine
# ===============================
FROM docker.io/alpine:3.20

# 最小依賴 (不安裝 nginx 等複雜服務)
RUN apk add --no-cache ca-certificates

# 創建應用用戶
RUN addgroup -g 1000 app && \
    adduser -u 1000 -G app -s /bin/sh -D app

# 複製靜態鏈接的二進制文件
COPY --from=builder /app/target/x86_64-unknown-linux-musl/release/care-voice /app/care-voice
RUN chmod +x /app/care-voice

# 複製模型文件
COPY backend/models/ggml-base.bin /app/models/ggml-base.bin
RUN chown -R app:app /app

WORKDIR /app
USER app

# 簡單測試 whisper-rs 初始化
CMD ["./care-voice"]